version: 2.1

orbs:
  cypress: cypress-io/cypress@1

executors:
  docker-executor:
    docker:
      - image: node:lts-alpine

jobs:
  lint:
    executor: docker-executor
    steps:
      - checkout
      - restore_cache:
          # See the configuration reference documentation for more details on using restore_cache and save_cache steps
          # https://circleci.com/docs/2.0/configuration-reference/?section=reference#save_cache
          keys:
            - node-deps-v1-{{ .Branch }}-{{checksum "package-lock.json"}}
      - run:
          name: Install packages
          command: npm ci
      - save_cache:
          key: node-deps-v1-{{ .Branch }}-{{checksum "package-lock.json"}}
          paths:
            - ~/.npm
      - run:
          name: Run Linter
          command: npm run lint

  test:
    executor: docker-executor
    steps:
      - checkout
      - restore_cache:
          # See the configuration reference documentation for more details on using restore_cache and save_cache steps
          # https://circleci.com/docs/2.0/configuration-reference/?section=reference#save_cache
          keys:
            - node-deps-v1-{{ .Branch }}-{{checksum "package-lock.json"}}
      - run:
          name: Install packages
          command: npm ci
      - save_cache:
          key: node-deps-v1-{{ .Branch }}-{{checksum "package-lock.json"}}
          paths:
            - ~/.npm
      - run:
          name: Run Tests
          command: npm run test

  deploy:
    machine: true
    parameters:
      app_name:
        type: string
        default: ${HEROKU_APP_NAME}
    steps:
      - checkout
      - run:
          name: Build and deploy Docker image to Heroku
          command: |
            set -x
            sudo curl https://cli-assets.heroku.com/install.sh | sh
            HEROKU_API_KEY=${HEROKU_API_KEY} heroku container:login
            HEROKU_API_KEY=${HEROKU_API_KEY} heroku container:push -a << parameters.app_name >> web
            HEROKU_API_KEY=${HEROKU_API_KEY} heroku container:release -a << parameters.app_name >> web

workflows:
  staging:
    jobs:
      - lint
      - test:
          requires:
            - lint
      - cypress/install:
          requires:
            - lint
      - cypress/run:
          command: npm run e2e
          requires:
            - cypress/install
          record: true
          parallel: true
          parallelism: 4
      - deploy:
          requires:
            - test
            - cypress/run
